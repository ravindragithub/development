({
    validateLTEForm: function(component) {  
        var validLTE = false;
        if(component.get("v.accountRequired")){
            this.showTabHelper(component,'Account','scrollAccount');
            component.set("v.newProdRegActivationError", 'Please enter all required fields in the "Account" section above.');            
        }else if(component.get("v.vesselInfoRequired")){
            this.showTabHelper(component,'Installation','scrollInstallation');
            component.set("v.newProdRegActivationError", 'Please enter all required fields in the "Installation" section above.');                      
        }else if(component.get("v.systemRequired")){
            this.showTabHelper(component,'SystemInformation','scrollSystem');
            component.set("v.newProdRegActivationError", 'Please enter all required fields in the "System" section above.');                      
        }else if(component.get("v.recieverInfoRequired") && component.get("v.perAccRequired")){            
            this.showTabHelper(component,'ProviderAccount','scrollPAcc');
            component.set("v.newProdRegActivationError", 'Please enter all required fields in the "Provider Account" section above.');                      
        }else{
            validLTE = true;
            component.set("v.newProdRegActivationError", "");
        }
        if(!validLTE)
            this.handleShowError(component,component.get("v.newProdRegActivationError"));
        return(validLTE);
    },    
    showTabHelper : function(component,activeTab,activeDivId) {
        component.find("accordion").set('v.activeSectionName', activeTab);
        var xdiv = document.getElementById(activeDivId);
        this.setScroller(component,xdiv);  
    },
    handleShowError : function(component,text) {     
        var showToast = $A.get("e.force:showToast"); 
        showToast.setParams({ 
            'title' : 'Error', 
            "type": "error",
            "mode": 'sticky',
            'message' : text
        }); 
        showToast.fire(); 
    },    
    handleShowModal: function(component, event, helper) {
        var address = '/myKVH-prodreg-confirmation/';
        var urlEvent = $A.get("e.force:navigateToURL");
        urlEvent.setParams({
            "url": address,
            "isredirect" :false
        });
        urlEvent.fire();        
    },    
    callAttachmentList : function(component, event, helper) {        
        var action = component.get("c.getListAttachment");
        action.setParams({ 
            ProdRegId : component.get("v.simpleProdRegActivation.Id") 
        });
        action.setCallback(this, function(response) {
            var state = response.getState();
            if (state === "SUCCESS") {
                component.set("v.attachmentList",response.getReturnValue());
                component.set('v.loadCheckList',true);
                component.set('v.loadPaymntPurch',true);
            }
            else if (state === "ERROR") {
                var errors = response.getError();
                if (errors) {
                    if (errors[0] && errors[0].message) {
                        console.log("Error message: " + errors[0].message);
                    }
                } else {
                    console.log("Unknown error");
                }
            }
        });
        $A.enqueueAction(action);      
    },
    SaveProductRegistration : function(component, event, helper) {
        var action = component.get("c.SaveProductRegistration");
        action.setParams({ updateProdReg : component.get("v.simpleProdRegActivation") });        
        action.setCallback(this,function(a){
            var state = a.getState();
            console.log('state ::' + state);
            if(state === "SUCCESS"){                
                console.log("Save completed successfully.");                    
                helper.handleShowModal(component, event, helper);   
            } 
            else if (state === "ERROR") {
                var errors = action.getError();
                console.log('errors ::' + errors);
                if (errors) {
                    if (errors[0] && errors[0].message) {
                        component.set("v.submitFormOnce", false);
                        component.set("v.spinner", false);
                        var sMsg = 'System error: Please contact Airtime Services for assistance. \n';
                        sMsg += 'KVH Airtime Services \n Hours: 6:00 PM Sunday to 5:00 PM Friday (ET) \n Phone: +1 401.851.3862 \n Email:Â airtimeservices@kvh.com';
                        helper.handleShowError(component,sMsg);   
                        console.log("Error message: " + errors[0].message);
                    }
                } 
            }else if (status === "INCOMPLETE") {
                alert('No response from server or client is offline.');
            }
        });    
        $A.enqueueAction(action);      
    },
    getProductRegHelper : function(component, event, helper) {
        var action = component.get("c.getProductReg");
        action.setCallback(this, function(response) {
            var state = response.getState();
            if (state === "SUCCESS") {
                if(response.getReturnValue() != null)
                    component.set("v.simpleProdRegActivation", response.getReturnValue());
                this.callAttachmentList(component, event, helper);                      
                this.getCountryHelper(component, event, helper);
            }
            else if (state === "ERROR") {
                var errors = response.getError();
                if (errors) {
                    if (errors[0] && errors[0].message) {
                        console.log("Error message: " + 
                                    errors[0].message);
                    }
                } else {
                    console.log("Unknown error");
                }
            }
        });
        $A.enqueueAction(action);      
    },
    getCountryHelper : function(component, event, helper) {
        var action = component.get("c.getCountry");
        action.setCallback(this, function(response) {
            var state = response.getState();
            if (state === "SUCCESS") {                
                helper.getContactHelper(component, event, helper);   
                var opts = [];
                var i;
                var countryList = response.getReturnValue();
                if(countryList.length != 0){
                    for(i in countryList){                        
                        var detailtemp = {};
                        detailtemp = { 'class': '', 'label': '', 'value': '' };
                        detailtemp.class = "optionClass";
                        detailtemp.label = countryList[i].TrimmedName__c;
                        detailtemp.value = countryList[i].IsoCode_2__c;
                        opts.push(detailtemp);
                    }
                }                
                component.set("v.countryList", opts);
            }
            else if (state === "ERROR") {
                var errors = response.getError();
                if (errors) {
                    if (errors[0] && errors[0].message) {
                        console.log("Error message: " + 
                                    errors[0].message);
                    }
                } else {
                    console.log("Unknown error");
                }
            }
        });
        $A.enqueueAction(action);        
    },
    getContactHelper : function(component, event, helper) {
        var action = component.get("c.getContactInfo");
        action.setCallback(this, function(response) {
            var state = response.getState();
            if (state === "SUCCESS") {
                if(response.getReturnValue().firstName != null && response.getReturnValue().firstName != ''){
                    component.set("v.simpleProdRegActivation.Subscriber_First_Name__c", response.getReturnValue().firstName);
                    component.set("v.firstnameFlag", true);
                }
                if(response.getReturnValue().lastName != null && response.getReturnValue().lastName != ''){
                    component.set("v.simpleProdRegActivation.Subscriber_Last_Name__c", response.getReturnValue().lastName);
                    component.set("v.lastnameFlag", true);
                }
                if(response.getReturnValue().email != null && response.getReturnValue().email != ''){                    
                    component.set("v.simpleProdRegActivation.Subscriber_Email__c", response.getReturnValue().email);
                    component.set("v.simpleProdRegActivation.Contact_email__c", response.getReturnValue().email);
                    component.set("v.emailFlag", true);
                }
                if(response.getReturnValue().mobilePhone != null && response.getReturnValue().mobilePhone != ''){
                    component.set("v.simpleProdRegActivation.Subscriber_Phone__c", response.getReturnValue().mobilePhone);
                    component.set("v.phoneFlag", true);
                }
                if(response.getReturnValue().country != null && response.getReturnValue().country != ''){
                    component.set("v.simpleProdRegActivation.Subscriber_Country__c", response.getReturnValue().country);
                    component.set("v.subsCountry", response.getReturnValue().country);
                    component.set("v.countryFlag", true);
                }
                if(response.getReturnValue().state != null && response.getReturnValue().state != ''){
                    component.set("v.simpleProdRegActivation.Subscriber_State_Province_Territory__c", response.getReturnValue().state);
                    component.set("v.stateFlag", true);
                }                
                if(response.getReturnValue().serialNumber != null && response.getReturnValue().serialNumber != ''){
                    component.set("v.simpleProdRegActivation.Antenna_Serial_No__c", response.getReturnValue().serialNumber);
                    component.set("v.serviceRequired", false);
                    component.set("v.antennaFlag", true);  
                    component.set("v.simpleProdRegActivation.Is_serial_was_passed__c", true);                    
                }
                var device = $A.get("$Browser.formFactor");
                component.set("v.simpleProdRegActivation.Device__c", device);    
                component.set("v.simpleProdRegActivation.Contact__c", response.getReturnValue().Id);
            }
            else if (state === "ERROR") {
                var errors = response.getError();
                if (errors) {
                    if (errors[0] && errors[0].message) {
                        console.log("Error message: " + 
                                    errors[0].message);
                    }
                } else {
                    console.log("Unknown error");
                }
            }
            //console.log(response.getReturnValue().firstName+'Object ::'+ component.get("v.simpleProdRegActivation.Main_Contact_FirstName_Subscriber__c"));
            component.set("v.spinner", false);
        });
        $A.enqueueAction(action); 
    },    
    setScroller : function(component,indexId) {
        var xdiv = document.getElementById(indexId);
        var box = { left : 0 ,top : 0};
        try{
            box = xdiv.getBoundingClientRect();
        }
        catch(e){}
        var x = box.left;
        var y = box.right;
        window.scrollTo(y,x);
    },    
})
<apex:page controller="RestoreDocumentsController" tabStyle="Prod_Documents__c" showHeader="false" sidebar="false" title="Remove Prod_Document" >
 
  <link rel="stylesheet" href="{!URLFOR($Resource.documentupload, 'css/jquery-ui.css')}"/>
  <style>
      .ui-autocomplete-loading {
        background: white url("{!URLFOR($Resource.documentupload, 'images/ui-anim_basic_16x16.gif')}") right center no-repeat;
      }
      .overlay {
        width: 100%;
        height: 100%;
        background: #fff;
        opacity: 0.7;
        top: 0px;
        left: 0px;
        position: fixed;
        z-index: 500;
       
    }
    
    .status {
        cursor: pointer;
        -moz-box-shadow: 0 0 15px 5px #DDDDDD;
        -webkit-box-shadow: 0 0 15px 5px #DDDDDD;
        box-shadow: 0 0 15px 5px #DDDDDD;  
        opacity: 1;
        height: auto;
        position: fixed;
        left: 50%;
        margin-top: 5%;
        padding: 15px;
        z-index: 1000;
        display: block;
    }
   

  </style>
  <apex:composition template="SiteTemplate">
        <apex:define name="body">  
         <apex:sectionHeader title="Product" subtitle="Document Update"/>
         
          <div id="load-status" style="display:none;">
                <div class="overlay"></div>
                <div class="status">                               
                    <img src="{!URLFOR($Resource.documentupload, 'images/Cursor_Windows_Vista.gif')}" />
                    <span id="load-statustext">File deleting in progress...</span>
                </div>
           </div>
        
<apex:form id="frm" >
  
  <apex:actionFunction name="saveRecords" action="{!saveRecords}" reRender="pgb,reloadscriptpanel" oncomplete="reloadpage();"/>
 
  <apex:pageBlock id="pgb" >
      <apex:pageMessages ></apex:pageMessages>
      <div id="results"></div>
      <apex:pageBlockButtons location="bottom">
          <input type="button" id="upload-button"  style="float: right;" onclick="deleteFileFromAWS(); return false;" value="Remove Document"/>             
          &nbsp;
          <input type="button" id="upload-button"  style="float: right;margin-right:10px" onclick="backbuttonclick('{!$CurrentPage.parameters.retURL}')" value="Back"/>             
      </apex:pageBlockButtons>
      
       <apex:pageBlockSection title="Search Prod_Document" columns="1">
          <apex:pageBlockSectionItem >
               <apex:outputLabel value="Prod_Document Name" ></apex:outputLabel>
              <apex:outputPanel >
                  <input id="filename"/>
                  <span id="productname" style="display:none"></span>  
                  <img id="closeicon" style="display:none;" src="https://cdn2.iconfinder.com/data/icons/flat-icons-web/40/Remove-16.png" onclick="showsearchinput();"/>                  
                  <apex:actionRegion >
                      <apex:actionFunction name="fetchProdDocumentObject" action="{!fetchProdDocumentObject}" reRender="proddocsection,scriptpannel" oncomplete="hidestatus();">
                          <apex:param value="" assignTo="{!productDocId}" name="prodDocID"/>
                      </apex:actionFunction>
                      <apex:actionFunction name="blankProd_DocmentObject" action="{!init}" reRender="proddocsection" oncomplete="hidestatus();"/>
                  </apex:actionRegion>
              </apex:outputPanel>    
          </apex:pageBlockSectionItem>
      </apex:pageBlockSection>
      
      <apex:outputPanel layout="none" id="proddocsection">
          <apex:pageBlockSection columns="2" title="Prod_Document Information">
              <apex:pageBlockSectionItem >
                  <apex:outputLabel value="File Type"></apex:outputLabel> 
                  <apex:outputField id="FileType" value="{!prodDoc.File_Extension__c}"/>
              </apex:pageBlockSectionItem>
               <apex:pageBlockSectionItem >
                   <apex:outputLabel >File Access</apex:outputLabel>
                   <apex:outputField id="File_Access" value="{!prodDoc.File_Access__c}"/>
               </apex:pageBlockSectionItem>
           </apex:pageBlockSection>
           
          
           
          <apex:pageBlockSection columns="1" title="Hide for Partner Type">
                  <apex:outputField value="{!prodDoc.Hide_for_Partner_Type__c}"/>
          </apex:pageBlockSection>
          <apex:pageBlockSection columns="2" title="Show On">
              <apex:outputField value="{!prodDoc.Product_Pages__c}"/>
              <apex:outputField value="{!prodDoc.Support_Section__c}"/>
              <apex:outputField value="{!prodDoc.Partner_Portal__c}"/>
              <apex:outputField value="{!prodDoc.Press_Room__c}"/>
          </apex:pageBlockSection>
          <apex:pageBlockSection columns="2" title="Other Details">
                  <apex:outputField id="Title_Display_Name" value="{!prodDoc.Title_Display_Name__c}"/>
              
                  <apex:outputField value="{!prodDoc.Sub_Title__c}"/>
                  
                  <apex:outputField value="{!prodDoc.Language__c}"/>
                  <apex:outputField value="{!prodDoc.Revision__c}"/>
                  <apex:outputField value="{!prodDoc.Terms_and_Conditions__c}"/>
                  <apex:outputField value="{!prodDoc.Marketo_URL__c}"/>
                  <apex:outputField value="{!prodDoc.Site_Core_URL__c}"/>
                  
                  <apex:outputField value="{!prodDoc.Alternate_Text__c}"/>
                  <apex:outputField value="{!prodDoc.Width__c}"/>
                  <apex:outputField value="{!prodDoc.Height__c}"/>
                  <apex:outputField value="{!prodDoc.File_Description__c}"/>
                  
          </apex:pageBlockSection>  
       </apex:outputPanel> 
  </apex:pageBlock>
 <apex:inputHidden id="hostingurl" value="{!hostingurl}"/>

</apex:form> 
</apex:define> 
 </apex:composition> 
  
  <script src="{!URLFOR($Resource.documentupload, 'js/jquery-1.12.4.js')}"></script>
  <script src="{!URLFOR($Resource.documentupload, 'js/jquery-ui.js')}"></script>
  
  <script src="{!URLFOR($Resource.documentupload, 'js/aws-sdk-2.21.0.min.js')}"></script>
  
  <apex:outputPanel id="scriptpannel">
      <script>
           var oldfileName = '{!prodDoc.Name}';
      console.log("{!prodDoc.File_Description__c}");
      console.log( $(".cke_editable"));
       setTimeout(function(){ 
            $(".cke_editable").append("{!prodDoc.File_Description__c}"),
       3000});
         
      </script>
  </apex:outputPanel>
  
  <apex:outputPanel id="reloadscriptpanel">
      <script>
           var isError = '{!isError}';
           //alert(isError);
           function reloadpage(){               
                if(isError == false || isError == 'false'){
                    alert('File successfully deleted.')
                    location.href = '/apex/removeDocument';
                }
            }
      </script>  
  </apex:outputPanel>
  
  <script>
  
  var filetype;
  var docfilename;
 
  var newFileName;
   $( function() {    
 
    $( "#filename" ).autocomplete({
      source: function( request, response ) {
        $.ajax( {
          url: "{!$Label.Prod_DocumentSearchPageURL}",         
          data: {
            term: request.term
          },
          success: function( data ) {
            response( data );
          }
        } );
      },
      minLength: 2,
      select: function( event, ui ) {
        var productlink = '<a href="/' + ui.item.data + '" target="_blank">' + ui.item.value + '</a>'; 
        docfilename = ui.item.value;
        $('[id*="productname"]').html(productlink);          
        $('[id*="productname"]').show();
        $('[id*="filename"]').hide();   
        $('[id*="closeicon"]').show(); 
        $('[id*="filename"]').addClass("error");    
        $('[id*="filenameerrormsg"]').remove(); 
        showstatusmessage('Fetching fileds of ' + ui.item.value + ' from salesforce');
        fetchProdDocumentObject(ui.item.data);
        
      }
    });
    
  } );
  
  
 
 function fetchProductfun(){
     
 }
 
 function showstatusmessage(msg){
     $("#load-statustext").text(msg);
     $("#load-status").show();
 }
 
  
  
  
  function hidestatus(){
      $("#load-status").hide();
      $("#load-statustext").text("");
  }
  
  function deleteFileFromAWS(){
     
     if(!formvalidation()){
        $("#load-statustext").text("File deleting in progress...");
        $("#load-status").show();
        
         var isPrivate = $('[id*="File_Access"]').text();
         //alert(isPrivate);
         Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.RestoreDocumentsController.fetchCredentials}',
            isPrivate,
            function(result, event){
                if (event.status) {
                   AWS.config.region = result.Region__c; // 1. Enter your region                                      
                   deleteFile(result.Client_Id__c,result.Client_Secret__c,result.Bucket_Name__c,docfilename);                   
                } else if (event.type === 'exception') {
                    console.log("Error ==>" + event.message + ' ' + event.where);
                   
                } else {
                     console.log("Messge ==>" + event.message);
                }
            }, 
            {escape: true}
        );            
      }  
    }
    
    
    function deleteFile(key,secert,bucketName,FILENAME) {
        
        var creds = new AWS.Credentials(key,secert);
        AWS.config.credentials = creds;
       
        var bucket = new AWS.S3({
            params: {
                Bucket: bucketName,                
            }
        });    
       
        var params = {
            Bucket: bucketName,
            Key: "Partner_Update_Form_Marineglobal.fillfields.pdf",
            VersionId:"dNIq_.nRXLWwwi6Q.JKZP2ni8m.mfC5w"
        };
        bucket.deleteObject(params, function (err, data) {
            if (data) {
                console.log(data);
                console.log("File deleted successfully");
                var downloadparams = {Bucket: bucketName, Key: FILENAME,Expires : 315360000};
                    
                var url = bucket.getSignedUrl('getObject', downloadparams);
               //alert(url);
                $('[id*="hostingurl"]').val(url);
              //  saveRecords();             
            }
            else {
                console.log("Check if you have sufficient permissions : "+err);
            }
        });
    }
    
    function showsearchinput(){
        $('[id*="productname"]').hide();
        $('[id*="filename"]').show(); 
        $('[id*="filename"]').val('');
        $('[id*="closeicon"]').hide();
        $('[id*="postalviewselectlist"]').show(); 
        $('[id*="productportalviews"]').hide();  
        $('[id*="productportalviews"]').html(''); 
        $("#load-statustext").text("Refreshing...");
        $("#load-status").show();
        blankProd_DocmentObject();
    }
    
   
    
    function formvalidation(){
        $(".errorMsg").remove();
        $(".error").removeClass("error"); 
       
        var isError = false;
       
        if( $('[id*="filename"]').val() === undefined || $('[id*="filename"]').val().trim() == ''){
            isError = true;
            adderrorMessage($('[id$="filename"]'),'Please select Document');
        }
        
              
        
        return isError;
    }
    function adderrorMessage(elm,msg){
        //alert($(elm).attr("id"));
        $(elm).after('<div class="errorMsg" id="' + $(elm).attr("id") + 'errormsg' +'" ><strong>Error:</strong>' +  msg + '</div>');
        $(elm).addClass("error");
    }     
    
    function setfiletype(){
        var fileChooser = document.getElementById('file-chooser');   
        var file = fileChooser.files[0];
        var selectfiletype = file.type;
        //alert(selectfiletype);
        
        if(selectfiletype == 'image/jpeg'){
            filetype = 'Jpg';
        }else if(selectfiletype == 'application/pdf'){
            filetype = 'pdf';
        }else if(selectfiletype  == 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' || selectfiletype.indexOf(document) > -1 || selectfiletype == 'application/msword'){
            filetype = 'doc';
        }else if (selectfiletype == 'video/mp4'){
            filetype = 'mp4';
        }else if(selectfiletype == 'image/png'){
            filetype = 'png';
        }else{
            filetype = selectfiletype;
        }
        
        //$('[id$="FileType"]').val(filetype);
        $('[id$="Title_Display_Name"]').val(file.name);
        newFileName = file.name;
        
    }
    
    function backbuttonclick(returl){
        location.href = returl;
    }
  </script>
</apex:page>
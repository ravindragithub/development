({
    initialize: function(component, event, helper) {      
        
        $A.get("e.siteforce:registerQueryEventMap").setParams({"qsToEvent" : helper.qsToEventMap}).fire();
        $A.get("e.siteforce:registerQueryEventMap").setParams({"qsToEvent" : helper.qsToEventMap2}).fire();      
        component.set('v.extraFields', helper.getExtraFields(component, event, helper));
        var url = window.location.href;
        var urlParams = {};
        
        url.replace(new RegExp("([^?=&]+)(=([^&]*))?", "g"),function($0, $1, $2, $3) {urlParams[$1] = $3;});
        if(urlParams.sn != undefined){
            component.set("v.serialNumber", urlParams.sn);
        }
        helper.getCountryHelper(component, event, helper);
    },
    handleCheckAcceptAll : function(component, event, helper) {
        var isChecked = component.find("acceptAllCheckbox").get("v.checked");
        component.set("v.acceptAllValue", isChecked);
        if(isChecked){
            component.find("emailCheckbox").set("v.checked");
            component.set("v.emailValue", isChecked);
            component.find("postalMailCheckbox").set("v.checked");
            component.set("v.postalValue", isChecked);
            component.find("telphoneCheckbox").set("v.checked");
            component.set("v.telephoneValue", isChecked);
        }else{
            component.find("emailCheckbox").set("v.checked");
            component.set("v.emailValue", isChecked);
            component.find("postalMailCheckbox").set("v.checked");
            component.set("v.postalValue", isChecked);
            component.find("telphoneCheckbox").set("v.checked");
            component.set("v.telephoneValue", isChecked);
        }
        var isChecked = component.find("declineCheckbox").set("v.checked");
        component.set("v.declineValue", isChecked);
    },
    
    handleCheck : function(component, event, helper) {
        console.log('handleCheck'); 
        var isemailChecked = component.find("emailCheckbox").get("v.checked");
        component.set("v.emailValue", isemailChecked);
        console.log(component.get("v.emailValue"));
        var ispostalChecked = component.find("postalMailCheckbox").get("v.checked");
        component.set("v.postalValue", ispostalChecked);
        console.log(component.get("v.postalValue"));
        var istelphoneChecked = component.find("telphoneCheckbox").get("v.checked");
        component.set("v.telephoneValue", istelphoneChecked);
        console.log(component.get("v.telephoneValue"));
        if(component.get("v.emailValue") && component.get("v.postalValue") && component.get("v.telephoneValue")){
            console.log(component.get("v.emailValue"));
            var isChecked = component.find("acceptAllCheckbox").set("v.checked");
            component.set("v.acceptAllValue", isemailChecked);
        }else if(!(component.get("v.emailValue") && component.get("v.postalValue") && component.get("v.telephoneValue"))){
            var isChecked = component.find("acceptAllCheckbox").set("v.checked");
            component.set("v.acceptAllValue", isChecked);
        }
        var isChecked = component.find("declineCheckbox").set("v.checked");
        component.set("v.declineValue", isChecked);
    },
    
    handleCheckDecline : function(component, event, helper) {
        var isChecked = component.find("declineCheckbox").get("v.checked");
        component.set("v.declineValue", isChecked);
        if(!isChecked){
            component.set("v.emailValue", isChecked);
            component.find("emailCheckbox").set("v.checked");
            component.set("v.postalValue", isChecked);
            component.find("postalMailCheckbox").set("v.checked");
            component.set("v.telephoneValue", isChecked);
            component.find("telphoneCheckbox").set("v.checked");
            component.set("v.acceptAllValue", isChecked);
            component.find("acceptAllCheckbox").set("v.checked");
        }else{
            component.set("v.emailValue", isChecked);
            component.find("emailCheckbox").set("v.checked");
            component.set("v.postalValue", isChecked);
            component.find("postalMailCheckbox").set("v.checked");
            component.set("v.telephoneValue", isChecked);
            component.find("telphoneCheckbox").set("v.checked");
            component.set("v.acceptAllValue", isChecked);
            component.find("acceptAllCheckbox").set("v.checked");
        }
    },
    handleSelfRegister: function (component, event, helpler) {
        //var gdpr = component.get("v.GDPR1");
        //component.set("v.GDPR1", gdpr);
        console.log('handle self register');
        helpler.handleSelfRegister(component, event, helpler);
        
    },
    
    setStartUrl: function (component, event, helpler) {
        var startUrl = event.getParam('startURL');
        if(startUrl) {
            component.set("v.startUrl", startUrl);
        }
    },
    
    setExpId: function (component, event, helper) {
        var expId = event.getParam('expid');
        if (expId) {
            component.set("v.expid", expId);
        }
        helper.setBrandingCookie(component, event, helper);
    },
    
    onKeyUp: function(component, event, helpler){
        //checks for "enter" key
        if (event.getParam('keyCode')===13) {
            helpler.handleSelfRegister(component, event, helpler);
        }
    }   
})
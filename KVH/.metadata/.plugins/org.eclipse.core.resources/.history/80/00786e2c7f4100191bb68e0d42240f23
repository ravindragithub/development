<apex:page sidebar="false" showHeader="false" controller="AccountSetupController" standardStyleSheets="false" id="thePage">
    <html>
        <head>
            <meta charset="UTF-8"/> 
            <title>Online Activation Order - Account Setup</title> 
            <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js">
            </script>
            <script src="https://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js">
            </script>
            <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.js">
            </script>
            <script src="https://use.fontawesome.com/0633ed32ab.js">
            </script>
            <link href="https://use.fontawesome.com/0633ed32ab.css" media="all" rel="stylesheet"/>
            <link rel="stylesheet" href="https://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css"/>
            <link rel="stylesheet" href="//code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css"/>
            <link href="{!URLFOR($Resource.ActivationOrders, 'www/css/reset.css')}" rel="stylesheet"/>
            <link href="{!URLFOR($Resource.ActivationOrders, 'www/css/styles.css')}" rel="stylesheet"/>
            <link href="{!URLFOR($Resource.ActivationOrders, 'www/assets/tabs/css/style.css')}" rel="stylesheet"/>
            <link href="{!URLFOR($Resource.myKVH_tabs)}" rel="stylesheet"/>
            <link href="{!URLFOR($Resource.ActivationOrders, 'www/assets/remodal/jquery.remodal.css')}" rel="stylesheet"/>
            
            
            <!-- Handle jQuery conflicts (e.g. "$") -->
            <script type="text/javascript">
            var j$ = jQuery.noConflict();
            </script>
            <!-- Load jQuery plug-ins, use minimized libs -->
            <!-- Library for Modal windows.... -->
            <script src="{!URLFOR($Resource.ActivationOrders, 'www/assets/remodal/jquery.remodal.min.js')}" type="text/javascript"></script>
            <!-- Library for jQuery Validator... -->
                <script src="{!URLFOR($Resource.jquery_validation, 'dist/jquery.validate.js')}" type="text/javascript"></script>
            <script>
            var validator;
            j$( document ).ready(function() {
                validator = j$("[id$='theForm']").validate({ignore: ":disabled"});
            });
            
            if (!FileReader.prototype.readAsBinaryString) {
                FileReader.prototype.readAsBinaryString = function (fileData) {
                    var binary = "";
                    var pt = this;
                    var reader = new FileReader();      
                    reader.onload = function (e) {
                        var bytes = new Uint8Array(reader.result);
                        var length = bytes.byteLength;
                        for (var i = 0; i < length; i++) {
                            binary += String.fromCharCode(bytes[i]);
                        }
                        //pt.result  - readonly so assign binary
                        pt.content = binary;
                        j$(pt).trigger('onloadend');
                    }
                    reader.readAsArrayBuffer(fileData);
                }
            }
            </script>
            
            
        </head>
        <style type="text/css">
            .rich-tabpanel-content{
            box-shadow: none;
            }
            .rich-tab-bottom-line {
            border-bottom: 1px solid #c7c7c7;
            } 
            ul.terms {
            list-style-type: disc;
            }
            
            .pad-left {
            margin-left: 20px;
            }
            ol, ul {
            list-style: none;
            }
            ol li, ul.terms li{
            padding: 0 0 10px 5px;
            text-align: left;
            }
            
            .phone-types fieldset{
            display: inline;
            float: right;
            margin-right: 2%;
            }
            #main {
            background: white;
            padding-left: 20%;
            }
            #main {
            float: left;
            width: 100%;
            }
            select {
            width: 100%;
            padding: 2px 2px 5px;
            border: 1px solid #c7c7c7;
            background-color: #fff;
            }
            
            .phone-types table{
            width:105%;
            }
            
            .loadingStatus {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            list-style: none;
            z-index: 9999;
            }
            
            .diableClassStyle{
            color: gray !important;
            background-color: #f1efef !important;
            }
            
            .loadingStatus .img {
            width: 32px;
            margin: 0 auto;
            }
            
            .loadingBox {
            display: none;
            background: #000000;
            opacity: 0.45;
            filter: alpha(opacity=45);
            position: fixed;
            top: 0px;
            left: 0px;
            min-width: 100%;
            min-height: 100%;
            z-index: 9999;
            }
            
            .selecterror{
            border : 1px solid #cc0000;
            box-shadow : 0 0 5px 0 rgb(204, 0, 0);
            }
            
            .error{
            border-top: 1px solid #cc0000 !important;
            border-bottom: 1px solid #cc0000 !important;
            color: #cc0000 !important;
            }
            
            label.error{
            border-top: 0px solid #cc0000 !important;
            border-bottom: 0px solid #cc0000 !important;
            color: #cc0000 !important;
            }
            
            .requiredRedMarkFld{
            border-left: 4px solid #cc0000 !important;;padding-left: 4px !important;
            }
            
            .error-box
            { margin-top: 10px;border:1px solid #cc0000; width:47%; color:#cc0000; border-radius:3px; margin-bottom:20px; }
            
            .error-box h1
            { background:#cc0000; color:#fff !important; font-size:1em !important; padding:5px; margin-bottom:10px; font-weight:bold; }
            
            .error-box li
            { margin-left:20px; } 
            
            img {
            float: left; 
            }
            
            .tooltip {
            display: inline-block;
            }
            
            .fontTip {
            font-size: 10px;
            }
            
            .tooltip .tooltiptext {
            visibility: hidden;
            width: 250px;
            background-color: white;
            border: 1px solid black;
            color: block;
            text-align: center;
            border-radius: 6px;
            padding: 5px 0;
            
            /* Position the tooltip */
            position: absolute;
            z-index: 1;
            }
            
            .tooltip:hover .tooltiptext {
            visibility: visible;
            }
            p.skipVR {
            font-family: "Times New Roman";
            font-size: 15px;
            color: #cc0000;
            }
            
            .remodalAgain{
            max-width: 350px !important;
            min-width: 350px !important;
            min-height: 0 !important;
            margin: 20px auto !important;
            border-radius: 6px !important;
            padding: 20px 20px !important;
            }
            
            ::-webkit-input-placeholder {
            font-style: italic;
            }
            :-moz-placeholder {
            font-style: italic;  
            }
            ::-moz-placeholder {
            font-style: italic;  
            }
            :-ms-input-placeholder {  
            font-style: italic; 
            }
            .remodalAgains{
            max-width: 700px !important;
            min-width: 700px !important;
            min-height: 200px !important;
            margin: 0px auto !important;
            border-radius: 6px !important;
            padding: 0px 0px !important;
            }
            .button {
            color: #fff !important;
            padding: 7px 27px 8px;
            margin: 15px 0;
            text-align: center;
            text-decoration: none;
            font-weight: bold;
            display: -moz-inline-stack;
            display: inline-block;
            zoom: 1;
            _overflow: hidden;
            -webkit-border-radius: 3px;
            -moz-border-radius: 3px;
            border-radius: 3px;
            background: #6699cc;
            border: 0;
            text-shadow: none !important;
            }
            .ui-mobile label, .ui-controlgroup-label {
            display: -webkit-inline-box;
            margin: 0 0 .4em;
            }
            .ui-mobile label, div.ui-controlgroup-label {
            font-weight: 400;
            font-size: 14px;
            } 
            .validateSkipButton{
            margin-left: 33%;
            background-color: #f3f3f3 !important;
            color: gray !important;
            border: 1px solid #ddd;
            }
        </style>
        
        <body class="ui-mobile-viewport ui-overlay-a" style="zoom: 1;">
            <div data-role="page" style="overflow: hidden;"  tabindex="0" class="ui-page ui-page-theme-a ui-page-active">
                
                <div class="loadingStatus" id="loadingDiv">
                    <div class="">
                        <div class="img "><img src="/img/loading.gif"/></div>
                    </div>
                </div>
                <div id="loadingBox" class="loadingBox"></div>
                <apex:form id="theForm">
                   <input type="hidden" name="currentvfpage" value="{!$CurrentPage.Name}"/>
                    <c:Activation_Header />
                    <div id="sidebar">
                        <c:Activation_Status state="{!ActivationStatus}" pageOrderID="{!ActivationOrderId}"/>
                    </div>
                    <apex:actionFunction name="statusupdate" action="{!goToTab}" oncomplete="hideLoadingDiv();" reRender="wrapper" immediate="true" >
                        <apex:param name="param" assignTo="{!selectedTab}" value="" />
                    </apex:actionFunction>
                    
                    <div id="main">
                        <apex:outputPanel layout="block" id="wrapper" styleClass="wrapper">
                            <div style="float:left;">  <h1 class="title">Subscription Account</h1></div>
                            <div class="required"> <span class="requiredRedMarkFld"></span> = Required field</div>
                            
                            <apex:tabPanel switchType="client" value="{!selectedTab}" id="theTabPanel" >
                                
                                <apex:tab label="Main Contact" name="Subscriber_Information" id="Subscriber_Information" 
                                          onTabEnter="showLoadingDiv();statusupdate('Subscriber_Information');"  disabled="{!IF(disableAccsetupTabs['Subscriber_Information'] > ActivationStatus.Account_Setup_Last_Active_Tab_Index__c,true,false)}">
                                    <c:Activation_Subscriber pageOrderID="{!ActivationOrderId}" pageStatus="{!ActivationStatus}" id="Act_subscriber" rendered="{!(ActivationStatus.Account_Setup_Active_Tab__c == 'Subscriber_Information')}" />
                                    
                                </apex:tab>
                                
                                <apex:tab label="Authorized Representatives" name="Authorized_Representatives" id="Authorized_Representatives" 
                                          onTabEnter="showLoadingDiv();statusupdate('Authorized_Representatives');" disabled="{!IF(disableAccsetupTabs['Authorized_Representatives'] > ActivationStatus.Account_Setup_Last_Active_Tab_Index__c,true,false)}" rendered="{!hasMainContactrole}"><!--  -->
                                    <apex:outputPanel rendered="{!(ActivationStatus.Account_Setup_Active_Tab__c == 'Authorized_Representatives')}">
                                        <div style="padding-bottom:20px;">
                                            <h2 class="mainTitle"> Authorized Representatives</h2>
                                            Authorized Representatives will have permission to act on behalf of the subscriber or the subscribing company with respect to the Airtime Services account. 
                                            <a href="#Authorized_Representatives_Permissions" data-rel="popup" data-position-to="window" data-transition="pop" class="ui-link" aria-haspopup="true" aria-owns="modal" aria-expanded="false"> Learn more about these permissions.</a>
                                        </div>
                                        
                                        <c:Activation_Contact_list pageOrderID="{!ActivationOrderId}" id="contactlistcomponent" />
                                        <a Class="button left invoiceshowhide" value="Add An Individual Receipient" id="" onclick="loadComponent('KVH-show-inside-contactcomponent');" >
                                            + Add Authorized Representative 
                                        </a>
                                        <div style="display:none;" class="clear KVH-show-inside-contactcomponent">
                                            <div class="button-bar clear"></div>
                                            <c:Activation_Billing_picklist pageOrderID="{!ActivationOrderId}"  id="ActivationContact"/>
                                            <c:Activation_Contact pageOrderID="{!ActivationOrderId}" pageStatus="{!ActivationStatus}" contactRole="Authorized Representative"  id="contactcomponent" />
                                        </div>
                                        
                                        <div class="button-bar clear">
                                            <apex:commandLink styleClass="button left" value="< Back" action="{!goToTab}"  onclick="showLoadingDiv();" oncomplete="hideLoadingDiv();" immediate="true">
                                                <!-- Use the Name attribute of the previous tab -->
                                                <apex:param value="Subscriber_Information" assignTo="{!selectedTab}" />
                                            </apex:commandLink>
                                            <apex:commandLink styleClass="button right" value="Next >" action="{!goToTab}" onclick="showLoadingDiv();" oncomplete="hideLoadingDiv();">
                                                <!-- Use the Name attribute of the next tab -->
                                                <apex:param value="Billing_Information" assignTo="{!selectedTab}" />
                                            </apex:commandLink> 
                                        </div>
                                        <apex:commandLink styleClass="clear right"  value="Save & Exit" onclick="buttonfunctionCorporate(this); return false;"/> 
                                    </apex:outputPanel>
                                </apex:tab>
   
                                <apex:tab label="Billing Information" name="Billing_Information" id="Billing_Information" 
                                          onTabEnter="showLoadingDiv();statusupdate('Billing_Information');" disabled="{!IF(disableAccsetupTabs['Billing_Information'] > ActivationStatus.Account_Setup_Last_Active_Tab_Index__c,true,false)}">
                                    <apex:outputPanel rendered="{!(ActivationStatus.Account_Setup_Active_Tab__c == 'Billing_Information')}">
                                        <div style="padding-bottom:20px;">
                                            <h2 class="mainTitle">Billing Information</h2>
                                            <h3>Invoice Recipients &amp; Billing Representative</h3>
                                            <p style="padding-bottom:20px;">Invoices will be emailed to all designated invoice recipients on or about the fifth business day of each month.</p>
                                            <p>Add or remove Invoice Recipients and select a Billing Representative for invoicing or payment matters.</p>
                                        </div>
                                        <c:Activation_Corporate_Authorized_Rep pageOrderID="{!ActivationOrderId}" id="Billinglistcomponent"/>
                                        <apex:outputPanel rendered="{!strCorpduplicate != 'No'}">
                                            <a Class="button left invoiceshowhide" style="margin-right: 3%;" value="Add A Group Email" onclick="loadComponent('KVH-show-inside-ActivationGroupEmail');" >
                                                + Add Group Invoice Recipient
                                            </a>
                                            <a Class="button left invoiceshowhide" value="Add An Individual Receipient" id="" onclick="loadComponent('KVH-show-inside-ActivationIndividualEmail');" >
                                                + Add Invoice Recipient 
                                            </a>
                                        </apex:outputPanel>
                                        <div class="clear"/>
                                        <div style="display:none;" class="KVH-show-inside-ActivationGroupEmail">
                                            <c:Activation_Invoice_GroupEmail pageOrderID="{!ActivationOrderId}"  pageStatus="{!ActivationStatus}" id="ActivationGroupEmail" />
                                        </div>
                                        <div style="display:none;" class="KVH-show-inside-ActivationIndividualEmail">
                                            <apex:outputPanel id="ActivationIndividualEmail">
                                                <div>
                                                    <h3 class="mainTitle">Invoice Recipient</h3>
                                                </div>
                                                <c:Activation_Billing_picklist pageOrderID="{!ActivationOrderId}"  id="ActivationInvoiceSelection"/>
                                                <c:Activation_Contact pageOrderID="{!ActivationOrderId}" pageStatus="{!ActivationStatus}" contactRole="Invoice Recipient"  id="individualcomponent" />
                                            </apex:outputPanel>
                                        </div>
                                        <c:Activation_Billing pageOrderID="{!ActivationOrderId}" pageStatus="{!ActivationStatus}" contactRole="Billing Representative" id="billingComponent" />
                                        
                                    </apex:outputPanel>
                                </apex:tab>
                                
                                <apex:tab label="Payment Information" name="Payment_Information" id="Payment_Information" 
                                          onTabEnter="showLoadingDiv();statusupdate('Payment_Information');" disabled="{!IF(disableAccsetupTabs['Payment_Information'] > ActivationStatus.Account_Setup_Last_Active_Tab_Index__c,true,false)}" rendered="{!IF(subBillTo = 'Customer' || subBillTo = null,true,false)}">
                                    <c:Activation_Payment id="ActivationPaymentSubscriber" pageStatus="{!ActivationStatus}"  rendered="{!(ActivationStatus.Account_Setup_Active_Tab__c == 'Payment_Information')}" />
                                </apex:tab>
                            </apex:tabPanel>
                        </apex:outputPanel>
                    </div>
                    
                   <!-- Terms popup contents --> 
                    <c:Activation_Terms_Component referencePageName="{!UPPER($CurrentPage.Name)}"/>
                    <!-- Terms popup contents -->  
                    
                    <!-- ** remodal popup Start ** -->
                    
                    <div data-role="popup" id="AccSetup" style="min-width:400px !important; max-width:600px !important;" data-overlay-theme="b" class="ui-popup ui-body-inherit ui-overlay-shadow ui-corner-all">
                        <a href="#" data-rel="back" class="ui-btn ui-corner-all ui-shadow ui-btn-a ui-icon-delete ui-btn-icon-notext ui-btn-right">Close</a>
                        <div data-role="header" role="banner" class="ui-header ui-bar-inherit">
                            <h1 class="ui-title" role="heading" aria-level="1">Save and Exit</h1>
                        </div>
                        <div role="main" class="ui-content center">
                            <span>Are you sure you want to exit the activation order? <div class="notes">This activation order will be saved.</div></span>
                            <div class="center">
                                <apex:commandLink styleClass="button remodal-cancel"  value="Yes" action="{!saveandExit}" onclick="showLoadingDiv();" oncomplete="returntohomepage();" /> 
                                <a href="#" class="pad-left ui-link" data-rel="back">Continue Activation Order</a>                           
                            </div>
                        </div>
                    </div>        
                    <!-- ** remodal popup End ** -->
                    
                    
                    
                </apex:form>
                <!-- script Block for Modal Windows -->
                
                <!--Action Status Resources-->
                <apex:includeScript value="{!$Resource.ActivationStatusJS}"/>
                <!--<apex:includeScript value="{!$Resource.ActivationInvoiceTogling}"/>-->
                
                <script type="text/javascript" language="JavaScript">
                
                function returntohomepage(){
                    window.top.location = '/home/home.jsp';
                }
                
                window.remodalGlobals = {
                    namespace: "modal",
                    defaults: {
                        hashTracking: true
                    }
                };
                
                var options = {hashTracking: false, closeOnOutsideClick: false,closeOnEscape: false};
                
                /* To remove duplidate popup window initialized -Start */
                function removeduplicatepopup(popupID){
                    while(j$(popupID).length >1){
                        j$(popupID).last().remove();
                    }
                    while(j$('.remodal-wrapper').find(popupID).length >1){
                        j$('.remodal-wrapper').find(popupID).last().remove();
                    }
                }
                /* To remove duplidate popup window initialized -End */
                
                
                /* Activation Corporate button -Start */
                function buttonfunctionCorporate(param){
                    j$( "#AccSetup" ).popup( "open" );
                }
                /* Activation Corporate button -End */
                
                
                //j$('span.req').empty();
                </script>
                <script type="text/javascript" language="JavaScript">
                /* function hideLoadingDiv(){
                j$('[id$=State_Province__c]').each(function(){
                    if(j$(this).val() == 'Choose Country First'){
                        j$(this).attr('disabled','disabled');
                    }
                });
            }*/
                function getFormValues(){
                    /* To use correctly, ensure that fields to serialize have Ids that end with "__c" e.g. use API Field Names! */
                    var output = {};
                    var fields = j$("[id$='__c']").serializeArray();                    //Some "inputs" and a couple of "selects"
                    j$.each(fields, function() {
                        this.name = this.name.slice(this.name.lastIndexOf(':') + 1);    //index is zero based!
                        //alert(this.name);
                        if (output[this.name] !== undefined) {
                            
                            if(!output[this.name].push) {
                                output[this.name] = [output[this.name]];
                            }
                            output[this.name].push(this.value || '');
                        } else {
                            output[this.name] = this.value || '';
                        }
                    });
                    var JSONstring = JSON.stringify(output);
                    //console.log(JSONstring);
                    return JSONstring;
                }
                
                <!-- script to toggle block on load based on page parameter-Start -->
                    function togglescreen(){
                        if('{!$CurrentPage.parameters.Role}' == 'Group'){
                            j$(".KVH-show-inside-ActivationGroupEmail").toggle( "slow" );
                        }
                        else if('{!$CurrentPage.parameters.Role}' == 'Individual' || ('{!$CurrentPage.parameters.conActID}' != '')){
                            j$(".KVH-show-inside-ActivationIndividualEmail").toggle( "slow" );
                        }
                        
                        if('{!$CurrentPage.parameters.conActID}' != ''){
                            j$(".KVH-show-inside-contactcomponent").toggle( "slow" );
                        }
                    }
                <!-- script to toggle block on load based on page parameter-end -->
                    <!-- script to show hide component on button click -Start -->
                        function loadComponent(param){
                            if(param == 'KVH-show-inside-ActivationGroupEmail'){
                                j$(".KVH-show-inside-ActivationIndividualEmail").hide();
                                j$("."+param).toggle( "slow" );
                            }
                            else if(param == 'KVH-show-inside-ActivationIndividualEmail'){
                                j$(".KVH-show-inside-ActivationGroupEmail").hide();
                                j$("."+param).toggle( "slow" );
                            }
                            
                            if(param == 'KVH-show-inside-contactcomponent'){
                                j$(".KVH-show-inside-contactcomponent").toggle( "slow" );
                            }
                            //console.log(j$('.'+param));
                        }
                <!-- script to show ehide component on button click -end -->
                    
                    
                    //ValidationRules Applied FROM Here
                    
                    j$( document ).ready(function() {
                        j$.validator.addMethod("selectrequired", function(value, element, arg){
                            if(arg == value){
                                j$(element).addClass("selecterror");
                                return false;
                            }
                            else{
                                j$(element).removeClass("selecterror");
                                return true;
                            } 
                        }, "");
                        
                        j$.validator.addMethod("selectstaterequired", function(value, element, arg){
                            if(arg == value && j$(element).find('option').length >1 ){
                                j$(element).addClass("selecterror").addClass("requiredRedMarkFld");
                                return false;
                            }
                            else{
                                j$(element).removeClass("selecterror");
                                return true;
                            } 
                        }, "");
                        
                        j$.validator.addMethod("selectemail", function(value, element){
                            var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;
                            return pattern.test(value);
                        }, "Please enter a valid email address.");
                        
                        
                        generateRequired();
                        
                        togglescreen();
                        
                        j$('[id$=firstname]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        
                        j$('[id$=lastname]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        }); 
                        
                        j$('[id$=grpname]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        
                        j$('[id$=email]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                email: true,
                                selectemail:true,
                                messages: {
                                    required: ""
                                }
                            });            
                        }); 
                        
                        j$('[id$=address1]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        
                        j$('[id$=city]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        
                        j$('[id$=country]').each(function(){
                            j$(this).rules("add", {
                                selectrequired : "Choose One",
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        
                        j$('[id$=State_Province__c]').each(function(){
                            j$(this).rules("add", {
                                selectstaterequired : "Choose One",
                                messages: {
                                    required: ""
                                }
                            });
                            if(j$(this).val() == 'Choose Country First'){
                                j$(this).attr('disabled','disabled');
                            }
                        }); 
                        
                        j$('[id$=ppnumber]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        
                        j$('[id$=strMonth]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        }); 
                        
                        j$('[id$=strYear]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        }); 
                        
                        j$('[id$=creditcardnumber]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                // number: true,
                                minlength: 7,
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        j$('[id$=cvvnumber]').each(function(){
                            j$(this).rules("add", {
                                number: true,
                                minlength: 3,
                                maxlength: 4,
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        j$('[id$=expirationdate]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        
                        j$('[id$=postalcode]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        j$('[id$=jobfunction]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        j$('[id$=dealerCompanyName]').each(function(){
                            j$(this).rules("add", {
                                required: true,
                                messages: {
                                    required: ""
                                }
                            });            
                        });
                        
                        // change
                        j$('[id$=salutation]').each(function(){
                            //console.log(j$(this).find('option:first').text());
                            j$(this).find('option:first').text('--Select--');
                        });
                        j$('[id$=creditcardtype]').each(function(){
                            //console.log(j$(this).find('option:first').text());
                            j$(this).find('option:first').text('--Select--');
                        });
                        j$('[id$=jobfunction]').each(function(){
                            //console.log(j$(this).find('option:first').text());
                            j$(this).find('option:first').text('--Select--');
                        });
                        
                        j$('[id$=State_Province__c]').find('option').each(function(){
                            if(j$(this).text() == 'Choose Country First'){
                                j$(this).text('--Select Country First--');
                            }
                            if(j$(this).text() == 'Choose One'){
                                j$(this).text('--Select--');
                            }
                        });
                        j$('[id$=country]').find('option').each(function(){
                            if(j$(this).text() == 'Choose One'){
                                j$(this).text('--Select--');
                            }
                        });
                        
                        //fixing IE radio inline issues 
                        j$('fieldset table tr td, p').find("input[type='radio']").each(function (i){
                            if(j$(this).next("label")){
                                j$(this).css("display", "inline").next('label').css("display", "inline");
                            }
                        });
                        
                        j$('div.phone-types').find("label, fieldset,span.req").each(function (i){
                            j$(this).css("display", "inline");
                        });
                        j$("input[id$='chkbxk']").parent().find("label, input[type='checkbox']").each(function (i){
                            j$(this).css("display", "inline");
                        });
                        //fixing IE radio inline issues 
                    });
                
                
                function generateRequired(){
                    j$('span:has(span.req), p:has(span.req), div:has(span.req)').children('input[type=text], select').addClass('requiredRedMarkFld');
                    j$('span.req').empty();
                    
                    /*j$('[id$=State_Province__c]').each(function(){
                    // console.log(j$(this).val());
                    if(j$(this).find('option').length >1){
                        j$(this).addClass("requiredRedMarkFld");
                    } 
                });*/
            }
                
                <!-- script to show error message area -Start -->
                    function currenttabtoshowerror(){
                        var errordiv= "<div class='error-box' id='globalErrorBOX' style='display:none !important'>"; 
                        errordiv += "<h1><img src='/resource/cautionImage' height='20' width='20' />";
                        errordiv += "Please correct the errors indicated below and try again. </h1> <ul class='bullets'></ul> </div>";
                        return errordiv;
                    }
                <!-- script to show error message area -End -->
                    // Validator script //
                    function validateError(param,param1,param2,param3){
                        var Isvalid;
                        var currentcomp = j$("[id$="+param+"]");
                        var skipvalidationVar = j$(currentcomp).find("[id$=skipValidation]").is(':checked');
                        //console.log('==>' +skipvalidationVar);
                        //console.log('==>' +param);
                        if(!skipvalidationVar){
                            currentcomp = j$("[id$="+param+"]");
                            j$(currentcomp).find('.kvh-show-errormsg-here').empty();
                            if(j$(currentcomp).find("[id$=strMonth]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=strMonth]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=strMonth]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=strYear]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=strYear]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=strYear]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=firstname]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=firstname]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=firstname]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=lastname]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=lastname]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=lastname]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=creditcardnumber]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=creditcardnumber]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=creditcardnumber]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=expirationdate]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=expirationdate]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=expirationdate]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=cvvnumber]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=cvvnumber]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=cvvnumber]").valid() && Isvalid;
                            }
                            
                            if(j$(currentcomp).find("[id$=grpname]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=grpname]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=grpname]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=email]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=email]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=email]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=address1]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=address1]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=address1]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=city]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=city]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=city]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=country]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=country]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=country]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=State_Province__c]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=State_Province__c]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=State_Province__c]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=ppnumber]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=ppnumber]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=ppnumber]").valid() && Isvalid;
                            }
                            
                            if(j$(currentcomp).find("[id$=dealerCompanyName]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=dealerCompanyName]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=dealerCompanyName]").valid() && Isvalid;
                            }
                            
                            if(j$(currentcomp).find("[id$=postalcode]").length ==1){
                                if(Isvalid == undefined)
                                    Isvalid = j$(currentcomp).find("[id$=postalcode]").valid();
                                else
                                    Isvalid = j$(currentcomp).find("[id$=postalcode]").valid() && Isvalid;
                            }
                            if(j$(currentcomp).find("[id$=jobfunction]").length ==1){
                                var tempjob = j$(currentcomp).find("[id$=jobfunction]").valid();
                                if(tempjob == false){
                                    j$(currentcomp).find("[id$=jobfunction]").addClass('selecterror');
                                }else{
                                    j$(currentcomp).find("[id$=jobfunction]").removeClass('selecterror');
                                }
                                if(Isvalid == undefined){
                                    Isvalid = tempjob;
                                }else{
                                    Isvalid = tempjob && Isvalid;
                                }
                            } 
                            
                            var ppType = false;
                            if(j$(currentcomp).find("table[id$=PPT]").find('input[type=radio]:enabled').length > 0){
                                j$(currentcomp).find("table[id$=PPT]").find('input[type=radio]:enabled').each(function(){
                                    if(j$(this).is(':checked')){
                                        ppType = true;
                                    }
                                });
                            }else{
                                ppType = true;
                            }
                            if(!ppType){
                                Isvalid = false;
                                j$(currentcomp).find("table[id$=PPT]").addClass('selecterror');
                            }
                            else{
                                j$(currentcomp).find("table[id$=PPT]").removeClass('selecterror');
                            }
                            var spType = false;
                            if(j$(currentcomp).find("table[id$=SPT]").find('input[type=radio]:enabled').length > 0 ){
                                j$(currentcomp).find("table[id$=SPT]").find('input[type=radio]:enabled').each(function(){
                                    if(j$(this).is(':checked')){
                                        spType = true;
                                    }
                                });
                                if(j$(currentcomp).find("[id$=spnumber]:enabled").val() == ''|| j$(currentcomp).find("[id$=spnumber]:enabled").val() == null){
                                    spType = true;
                                }
                            }else{
                                spType = true;
                            }
                            
                            if(!spType){
                                Isvalid = false;
                                j$(currentcomp).find("table[id$=SPT]").addClass('selecterror');
                            }
                            else{
                                j$(currentcomp).find("table[id$=SPT]").removeClass('selecterror');
                            }
                            if(Isvalid ){
                                if(param3){
                                    showLoadingDiv();
                                    callBillingSaveOnly();}
                                else if(param1)
                                    ifSuccessCallSave(param);
                                    else if(param2=='Activation_Subscriber')
                                        buttonfunctionCorporateActSub(this);
                                        else if(param2=='Activation_Billing')
                                            buttonfunctionCorporate1(this);
                                            else
                                                buttonfunctionCorporate(this);
                            }else{
                                var html = "";
                                var errordiv = currenttabtoshowerror();
                                j$(currentcomp).find('.kvh-show-errormsg-here').append(errordiv);
                                if(j$(currentcomp).find('[id$=dealerCompanyName]').hasClass("error") && (j$(currentcomp).find("[id$=dealerCompanyName]").valid() == false)){
                                    html += "<li>Dealer/Distributor Company Name Required</li>";
                                }
                                if(param =='dealercomponent'){
                                    if(j$(currentcomp).find('[id$=ppnumber]').hasClass("error") && (j$(currentcomp).find("[id$=ppnumber]").valid() == false)){
                                        html += "<li>Company Phone Number Required</li>";
                                    }
                                    if(!ppType){
                                        html += "<li>Select Company Phone Type</li>";
                                    } 
                                }
                                if(j$(currentcomp).find('[id$=firstname]').hasClass("error") && (j$(currentcomp).find("[id$=firstname]").valid() == false)){
                                    html += "<li>First/Given Name Required</li>";
                                }
                                if(j$(currentcomp).find('[id$=lastname]').hasClass("error") && (j$(currentcomp).find("[id$=lastname]").valid() == false)){
                                    html += "<li>Last/Family Name/Surname Required</li>";
                                } 
                                if(j$(currentcomp).find('[id$=grpname]').hasClass("error") && (j$(currentcomp).find("[id$=grpname]").valid() == false)){
                                    html += "<li>Group Name Required</li>";
                                }
                                if(j$(currentcomp).find('[id$=email]').hasClass("error") && (j$(currentcomp).find("[id$=email]").valid() == false)){
                                    html += "<li>Valid Email Required</li>";
                                }
                                if(param !='dealercomponent'){
                                    if(j$(currentcomp).find('[id$=ppnumber]').hasClass("error") && (j$(currentcomp).find("[id$=ppnumber]").valid() == false)){
                                        html += "<li>Primary Phone Number Required</li>";
                                    }
                                    if(!ppType){
                                        html += "<li>Select Primary Phone Type</li>";
                                    }
                                }
                                if(!spType){
                                    if(param =='dealercomponent'){
                                        html += "<li>Select Contact Phone Type</li>";
                                    }else{
                                        html += "<li>Select Secondary Phone Type</li>";
                                    }
                                }
                                if(j$(currentcomp).find('[id$=jobfunction]').hasClass("error") && (j$(currentcomp).find("[id$=jobfunction]").valid() == false)){
                                    html += "<li>Select Role</li>";
                                }
                                if(j$(currentcomp).find('[id$=address1]').hasClass("error") && (j$(currentcomp).find("[id$=address1]").valid() == false)){
                                    html += "<li>Address 1 Required</li>";
                                }
                                if(j$(currentcomp).find('[id$=city]').hasClass("error") && (j$(currentcomp).find("[id$=city]").valid() == false)){
                                    html += "<li>City Required</li>";
                                }
                                if(j$(currentcomp).find('[id$=postalcode]').hasClass("error") && (j$(currentcomp).find("[id$=postalcode]").valid() == false)){
                                    html += "<li>Postal/Zip Code Required</li>";
                                }
                                if(j$(currentcomp).find('[id$=country]').hasClass("error") && (j$(currentcomp).find("[id$=country]").valid() == false)){
                                    html += "<li>Select Country</li>";
                                }
                                if(j$(currentcomp).find('[id$=State_Province__c]').hasClass("error") && (j$(currentcomp).find("[id$=State_Province__c]").valid() == false)){
                                    html += "<li>Select State/Province/Territory</li>";
                                }
                                if(j$(currentcomp).find('[id$=creditcardnumber]').hasClass("error") && (j$(currentcomp).find("[id$=creditcardnumber]").valid() == false)){
                                    html += "<li>Credit Card Number Required</li>";
                                }
                                if(j$(currentcomp).find('[id$=expirationdate]').hasClass("error") && (j$(currentcomp).find("[id$=expirationdate]").valid() == false)){
                                    html += "<li>Expiration Date Required</li>";
                                }
                                if(j$(currentcomp).find('[id$=strMonth]').hasClass("error") && (j$(currentcomp).find("[id$=strMonth]").valid() == false)){
                                    html += "<li>Expiration Month Required</li>";
                                }
                                if(j$(currentcomp).find('[id$=strYear]').hasClass("error") && (j$(currentcomp).find("[id$=strYear]").valid() == false)){
                                    html += "<li>Expiration Year Required</li>";
                                }
                                if(j$(currentcomp).find('[id$=cvvnumber]').hasClass("error") && (j$(currentcomp).find("[id$=cvvnumber]").valid() == false)){
                                    html += "<li>CVV Required</li>";
                                }
                                j$(currentcomp).find('.error-box').find('.bullets').html(html);
                                j$(currentcomp).find('.error-box').show();
                            }
                        }else {
                            if(param3){
                                showLoadingDiv();
                                callBillingSaveOnly();}
                            else if(param1)
                                ifSuccessCallSave(param);
                                else if(param2=='Activation_Subscriber')
                                    buttonfunctionCorporateActSub(this);
                                    else if(param2=='Activation_Billing')
                                        buttonfunctionCorporate1(this);
                                        else
                                            buttonfunctionCorporate(this);
                        }
                    }
                
                
                function ifSuccessCallSave(param){
                    var currentcomp = j$("[id$="+param+"]");
                    j$(currentcomp).find('.selecterror').removeClass('selecterror');
                    j$(currentcomp).find('.error').removeClass("error");
                    j$(currentcomp).find('.kvh-show-errormsg-here').empty();
                    showLoadingDiv();
                    //check here current tab and call appropriate method, pass next tab id 
                    if(param == 'Act_subscriber')
                        callSubscriberSave('Authorized_Representatives');
                    if(param == 'contactcomponent')
                        callcontactFromAccountSetup('Authorized_Representatives');
                    if(param == 'dealercomponent')
                        callDealerSave('Billing_Information');
                    if(param == 'billingComponent'){
                        if('{!subBillTo}' == 'Corporate'){
                            callBillingSave('Installation_Type');
                        }else{
                            callBillingSave('Payment_Information');
                        }
                    }
                    if(param == 'ActivationPaymentSubscriber')
                        callFromPaymentTab('Payment_Information');
                    if(param == 'individualcomponent') 
                        callcontactFromInstallationType('Invoicing_Preferences');
                    if(param == 'ActivationGroupEmail') 
                        callcontactFromAccountSetupGrp('Invoicing_Preferences');
                    
                    //console.log('END');
                }
                
                <!-- script Activation Payment navigate Back Start -->     
                    function validateActivationPaymentBack(){
                        showLoadingDiv();
                        statusupdate('Billing_Information'); 
                    }
                <!-- script Activation Payment navigate Next To Installation End -->
                    <!-- script Activation Payment navigate Back Start -->     
                        function validateActivationPaymentNextToInstallation(){
                            showLoadingDiv();
                            statusupdate('Installation_Type'); 
                        }
                <!-- script Activation Payment navigate Next To Installation End -->
                    </script>
             </div>
        </body>
    </html>
</apex:page>
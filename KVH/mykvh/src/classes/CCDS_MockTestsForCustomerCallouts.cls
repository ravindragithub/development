@isTest

global class CCDS_MockTestsForCustomerCallouts {
    global class getAvailableMiscInfoFieldsByProspectIdMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.MiscInfoReturn  custData = new CCDS_Customer.MiscInfoReturn ();
               CCDS_Customer.getAvailableMiscInfoFieldsByProspectIdResponse_element responseElement = new CCDS_Customer.getAvailableMiscInfoFieldsByProspectIdResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class getMiscInfoByCategoryNameSubCategoryNameMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.MiscInfoReturn  custData = new CCDS_Customer.MiscInfoReturn ();
               CCDS_Customer.getMiscInfoByCategoryNameSubCategoryNameResponse_element responseElement = new CCDS_Customer.getMiscInfoByCategoryNameSubCategoryNameResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class getInvoiceFileMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.CustomerInvoiceFileReturn  custData = new CCDS_Customer.CustomerInvoiceFileReturn ();
               CCDS_Customer.getInvoiceFileResponse_element responseElement = new CCDS_Customer.getInvoiceFileResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class getAccountsReceivableMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.AccountsReceivableReturn  custData = new CCDS_Customer.AccountsReceivableReturn ();
               CCDS_Customer.getAccountsReceivableResponse_element responseElement = new CCDS_Customer.getAccountsReceivableResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class addMiscInfoMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.CustomerReturn  custData = new CCDS_Customer.CustomerReturn ();
               CCDS_Customer.addMiscInfoResponse_element responseElement = new CCDS_Customer.addMiscInfoResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class updateCustomerBillOptionsMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.CustomerBillOptionReturn  custData = new CCDS_Customer.CustomerBillOptionReturn ();
               CCDS_Customer.updateCustomerBillOptionsResponse_element responseElement = new CCDS_Customer.updateCustomerBillOptionsResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class addDocumentMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.CustomerReturn  custData = new CCDS_Customer.CustomerReturn ();
               CCDS_Customer.addDocumentResponse_element responseElement = new CCDS_Customer.addDocumentResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class getMiscInfoByCategoryIdSubCategoryIdMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.MiscInfoReturn  custData = new CCDS_Customer.MiscInfoReturn ();
               CCDS_Customer.getMiscInfoByCategoryIdSubCategoryIdResponse_element responseElement = new CCDS_Customer.getMiscInfoByCategoryIdSubCategoryIdResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class terminateCustomerMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.CustomerReturn  custData = new CCDS_Customer.CustomerReturn ();
               CCDS_Customer.terminateCustomerResponse_element responseElement = new CCDS_Customer.terminateCustomerResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class addNoteMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.CustomerReturn  custData = new CCDS_Customer.CustomerReturn ();
               CCDS_Customer.addNoteResponse_element responseElement = new CCDS_Customer.addNoteResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class getMiscInfoByProspectIdOrCustomerNumberMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.MiscInfoReturn  custData = new CCDS_Customer.MiscInfoReturn ();
               CCDS_Customer.getMiscInfoByProspectIdOrCustomerNumberResponse_element responseElement = new CCDS_Customer.getMiscInfoByProspectIdOrCustomerNumberResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class addPaymentMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.CustomerReturn  custData = new CCDS_Customer.CustomerReturn ();
               CCDS_Customer.addPaymentResponse_element responseElement = new CCDS_Customer.addPaymentResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class addProspectMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.CustomerReturn  custData = new CCDS_Customer.CustomerReturn ();
               CCDS_Customer.addProspectResponse_element responseElement = new CCDS_Customer.addProspectResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class updateProspectMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.CustomerReturn  custData = new CCDS_Customer.CustomerReturn ();
               CCDS_Customer.updateProspectResponse_element responseElement = new CCDS_Customer.updateProspectResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class getPaymentsMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.PaymentsReturn  custData = new CCDS_Customer.PaymentsReturn ();
               CCDS_Customer.getPaymentsResponse_element responseElement = new CCDS_Customer.getPaymentsResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class customerSearchMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.CustomerSearchReturn  custData = new CCDS_Customer.CustomerSearchReturn ();
               CCDS_Customer.customerSearchResponse_element responseElement = new CCDS_Customer.customerSearchResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }
    global class updateCustomerMockImpl implements WebServiceMock {
        global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               CCDS_Customer.CustomerReturn  custData = new CCDS_Customer.CustomerReturn ();
               CCDS_Customer.updateCustomerResponse_element responseElement = new CCDS_Customer.updateCustomerResponse_element();
               responseElement.return_x = custData ;
               response.put('response_x', responseElement); 
           }
    }

}
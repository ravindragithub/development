<!--
/***********************************************************************************************************************
 Name: add_Identifier_Product
 Copyright Â© 2014 KVH Industries | Salesforce Instance : 
========================================================================================================================
 Purpose: 1) This is used to create new child Asset for existing case Asset.
------------------------------------------------------------------------------------------------------------------------
 Utilized in(Called in):
-----------------------
                                           
========================================================================================================================
 REQUIREMENT INFORMATION & DEVELOPMENT INFORMATION:                                                        
------------------------------------------------------------------------------------------------------------------------
 VERSION    AUTHOR              DATE             DETAIL                                Mercury Request #
------------------------------------------------------------------------------------------------------------------------
   1.0     Gopi Kishore. K      13/06/2014       Initial Development                                   
***********************************************************************************************************************/
-->
<apex:page controller="Add_Identifier_Product" sidebar="false" id="SP">
     <script>
         function CustomCancel()
            {
                var final = confirm("Are you sure you want to cancel?");
                if (final == true) {
                    var CurrentPageID = '{!CaseID}';
                    window.location.href = '/'+CurrentPageID;
                }
            }
            
         function alertSaveFunction(){
             var final = confirm("Are you sure you want to create the Asset?");
                if (final == true) {
                    assetSaveFunction();
                }
         }
         
         var idetifierType;
         function storeProductIdentifier(){
             idetifierType = document.getElementById("SP:frm:PB:PBS:IT").value
         }
         
         
         function openLookup(baseURL, width, modified, searchParam){
            if(idetifierType==null || idetifierType==""){
                alert('Please Select Identifier Type');
            }else{
            var originalbaseURL = baseURL;
            var originalwidth = width;
            var originalmodified = modified;
            var originalsearchParam = searchParam;
             
            var lookupType = baseURL.substr(baseURL.length-3, 3);
            if (modified == '1') baseURL = baseURL + searchParam;
         
            var isCustomLookup = false;
            
            // Following "001" is the lookup type for Account object so change this as per your standard or custom object
            if(lookupType == "01t"){ 
              
              var urlArr = baseURL.split("&");
              var txtId = '';
              if(urlArr.length > 2) {
                urlArr = urlArr[1].split('=');
                txtId = urlArr[1];
              }
              // Following is the url of Custom Lookup page. You need to change that accordingly
              baseURL = "/apex/ProductWindow?txt=" + txtId;
         
              // Following is the id of apex:form control "myForm". You need to change that accordingly
              baseURL = baseURL + "&frm=" + escapeUTF("{!$Component.myForm}");
              
              if (modified == '1') {
                baseURL = baseURL + "&lksearch=" + searchParam;
              }
              baseURL = baseURL + "&IFtype=" + idetifierType;
              try{      
              baseURL += '&empid='+ document.getElementById('pg:form:entryBlock:theHiddenInput').value;
              }catch(err){}
              // Following is the ID of inputField that is the lookup to be customized as custom lookup
              if(txtId.indexOf('contactWindow') > -1 ){
                isCustomLookup = true;
              }
            }
            
            if(isCustomLookup == true){
              openPopup(baseURL, "lookup", 350, 480, "width="+width+",height=480,toolbar=no,status=no,directories=no,menubar=no,resizable=yes,scrollable=no", true);
            }else {
              if (modified == '1') originalbaseURL = originalbaseURL + originalsearchParam;
              openPopup(originalbaseURL, "lookup", 350, 480, "width="+originalwidth+",height=480,toolbar=no,status=no,directories=no,menubar=no,resizable=yes,scrollable=no", true);
            } 
          }
         }
     </script>
     <apex:form id="frm">
         <apex:actionStatus id="showMsg" startText="saving...."></apex:actionStatus>
         <apex:actionFunction name="assetSaveFunction" action="{!assetSave}" reRender="frm" status="showMsg"/>
         <apex:pageBlock title="New Identifier Asset" id="PB">
             <apex:pageBlockSection columns="1" id="PBS">
                 <apex:inputField value="{!newAsset.Name}"/>
                 <apex:inputField value="{!newAsset.product2.Identifier_Type__c}" onchange="storeProductIdentifier();" id="IT"/>
                 <apex:inputField value="{!newAsset.product2ID}" id="contactWindow"/>
                 <apex:inputField value="{!newAsset.Service_Activation_Date__c}"/>
             </apex:pageBlockSection>
             <apex:pageBlockButtons >
                 <apex:commandButton value="Cancel" onclick="CustomCancel();" rerender="Final"/>
                 <apex:commandButton value="Submit" onclick="alertSaveFunction();" rerender="Final"/>
             </apex:pageBlockButtons>
         </apex:pageBlock>
     </apex:form>
</apex:page>